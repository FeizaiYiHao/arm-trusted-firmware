/*
 * Copyright (c) 2013-2019, ARM Limited and Contributors. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#ifndef FSP_H
#define FSP_H

/*
 * SMC function IDs that FSP uses to signal various forms of completions
 * to the secure payload dispatcher.
 */
#define FSP_ENTRY_DONE		0xf2000000
#define FSP_ON_DONE		0xf2000001
#define FSP_OFF_DONE		0xf2000002
#define FSP_SUSPEND_DONE	0xf2000003
#define FSP_RESUME_DONE		0xf2000004
#define FSP_PREEMPTED		0xf2000005
#define FSP_ABORT_DONE		0xf2000007
#define FSP_SYSTEM_OFF_DONE	0xf2000008
#define FSP_SYSTEM_RESET_DONE	0xf2000009

/*
 * Function identifiers to handle S-EL1 interrupt through the synchronous
 * handling model. If the FSP was previously interrupted then control has to
 * be returned to the FSPD after handling the interrupt else execution can
 * remain in the FSP.
 */
#define FSP_HANDLED_S_EL1_INTR		0xf2000006

/* SMC function ID that FSP uses to request service from secure monitor */
#define FSP_GET_ARGS		0xf2001000

/*
 * Identifiers for various FSP services. Corresponding function IDs (whether
 * fast or yielding) are generated by macros defined below
 */
#define FSP_ADD		0x2000
#define FSP_SUB		0x2001
#define FSP_MUL		0x2002
#define FSP_DIV		0x2003
#define FSP_HANDLE_SEL1_INTR_AND_RETURN	0x2004

/*
 * Identify a FSP service from function ID filtering the last 16 bits from the
 * SMC function ID
 */
#define FSP_BARE_FID(fid)	((fid) & 0xffff)

/*
 * Generate function IDs for FSP services to be used in SMC calls, by
 * appropriately setting bit 31 to differentiate yielding and fast SMC calls
 */
#define FSP_YIELD_FID(fid)	((FSP_BARE_FID(fid) | 0x72000000))
#define FSP_FAST_FID(fid)	((FSP_BARE_FID(fid) | 0x72000000) | (1u << 31))

/* SMC function ID to request a previously preempted yielding smc */
#define FSP_FID_RESUME		FSP_YIELD_FID(0x3000)
/*
 * SMC function ID to request abortion of a previously preempted yielding SMC. A
 * fast SMC is used so that the FSP abort handler does not have to be
 * reentrant.
 */
#define FSP_FID_ABORT		FSP_FAST_FID(0x3001)

/*
 * Total number of function IDs implemented for services offered to NS clients.
 * The function IDs are defined above
 */
#define FSP_NUM_FID		0x5

/* FSP implementation version numbers */
#define FSP_VERSION_MAJOR	0x0 /* Major version */
#define FSP_VERSION_MINOR	0x1 /* Minor version */

/*
 * Standard Trusted OS Function IDs that fall under Trusted OS call range
 * according to SMC calling convention
 */
#define TOS_CALL_COUNT		0xbf00ff00 /* Number of calls implemented */
#define TOS_UID			0xbf00ff01 /* Implementation UID */
/*				0xbf00ff02 is reserved */
#define TOS_CALL_VERSION	0xbf00ff03 /* Trusted OS Call Version */


//#ifndef __ASSEMBLER__
//
//#endif /* __ASSEMBLER__ */

#endif /* FSP_H */
